plugins {
    id 'war'
	id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(':process-api')
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'

    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.39'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.39'
    implementation 'org.glassfish.jersey.core:jersey-server:2.39'
    implementation 'org.glassfish.jersey.core:jersey-client:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-jaxb:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.39'
    implementation 'org.glassfish.jersey.ext:jersey-entity-filtering:2.39'
    implementation 'org.glassfish.jersey.core:jersey-common:2.39'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.39'

    implementation 'org.json:json:20140107'

    implementation "commons-io:commons-io:2.3"
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'
    implementation "org.apache.commons:commons-lang3:3.5"
    implementation "org.antlr:stringtemplate:3.2.1"

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.39'
    testImplementation 'org.glassfish.jersey.inject:jersey-hk2:2.39'
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
}

test {
    useJUnitPlatform()
}

war {
    archiveFileName = 'process-worker.war'
}

/* TODO is for Kramerius build
tasks.register<Copy>("bundleProcess") {
    val outDir = layout.buildDirectory.dir("plugin-bundle")
    into(outDir)

    from(configurations.runtimeClasspath)
    from(tasks.named("jar"))
}
*/

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.web
        }
    }
    repositories {
        mavenLocal()
    }
}