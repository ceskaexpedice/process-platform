plugins {
    id 'war'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    //api project(':process-api')
    //api project(':process-common')


    implementation project(':process-api')
    implementation project(':process-common')

    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.39'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.39'

    //implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0' // Provided by Tomcat
    //providedCompile 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'javax.servlet:javax.servlet-api:4.0.1' // Provided by Tomcat
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1'

    implementation 'javax.ws.rs:javax.ws.rs-api:2.1'
    implementation "javax.inject:javax.inject:1"

    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:2.39'
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.39'
    implementation 'org.glassfish.jersey.core:jersey-server:2.39'
    implementation 'org.glassfish.jersey.core:jersey-client:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-jaxb:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-multipart:2.39'
    implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.39'
    implementation 'org.glassfish.jersey.ext:jersey-entity-filtering:2.39'
    implementation 'org.glassfish.jersey.core:jersey-common:2.39'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:2.39'

    implementation 'org.glassfish.hk2:hk2-api:2.6.1'
    implementation 'org.glassfish.hk2.external:jakarta.inject:2.6.1'
    implementation 'org.glassfish.hk2:osgi-resource-locator:1.0.3'
    implementation 'org.glassfish.hk2:hk2-locator:2.6.1'
    implementation 'org.glassfish.hk2.external:aopalliance-repackaged:2.6.1'
    implementation 'org.glassfish.hk2:hk2-utils:2.6.1'

    implementation 'org.json:json:20140107'
    implementation 'javax.servlet:servlet-api:2.5'

    // jackson dependency
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.8.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.8.1'

    implementation "commons-io:commons-io:2.3"
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.39'
    testImplementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'javax.activation:activation:1.1.1'
}

war {
    webXml = file('web/WEB-INF/web.xml')
}

test {
    useJUnitPlatform()
}

war {
    archiveFileName = 'process-worker.war'
}

/* TODO is for Kramerius build
tasks.register<Copy>("bundleProcess") {
    val outDir = layout.buildDirectory.dir("plugin-bundle")
    into(outDir)

    from(configurations.runtimeClasspath)
    from(tasks.named("jar"))
}

 */